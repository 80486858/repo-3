package(default_visibility = ["//visibility:public"])

load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix sigs.k8s.io/cloud-provider-azure
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/cmd/cloud-controller-manager/app //cmd/cloud-controller-manager/app:go_default_library
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/cmd/cloud-controller-manager/app/config //cmd/cloud-controller-manager/app/config:go_default_library
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/cmd/cloud-controller-manager/app/apis/config/v1alpha1 //cmd/cloud-controller-manager/app/apis/config/v1alpha1:go_default_library
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/cmd/cloud-controller-manager/app/apis/config //cmd/cloud-controller-manager/app/apis/config:go_default_library
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/cmd/cloud-controller-manager/app/apis/config/scheme //cmd/cloud-controller-manager/app/apis/config/scheme:go_default_library
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/cmd/cloud-controller-manager/app/options //cmd/cloud-controller-manager/app/options:go_default_library
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/pkg/version //pkg/version:go_default_library
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/pkg/version/verflag //pkg/version/verflag:go_default_library
# gazelle:resolve go sigs.k8s.io/cloud-provider-azure/pkg/version/prometheus //pkg/version/prometheus:go_default_library
# gazelle:resolve go google.golang.org/grpc //vendor/google.golang.org/grpc:go_default_library
gazelle(
    name = "gazelle",
    command = "fix",
    external = "vendored",
    build_tags = ["integration"],
)
