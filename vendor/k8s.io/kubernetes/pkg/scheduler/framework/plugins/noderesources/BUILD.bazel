load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "balanced_allocation.go",
        "fit.go",
        "least_allocated.go",
        "most_allocated.go",
        "requested_to_capacity_ratio.go",
        "resource_allocation.go",
        "resource_limits.go",
        "test_util.go",
    ],
    importmap = "sigs.k8s.io/cloud-provider-azure/vendor/k8s.io/kubernetes/pkg/scheduler/framework/plugins/noderesources",
    importpath = "k8s.io/kubernetes/pkg/scheduler/framework/plugins/noderesources",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/resource:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/util/feature:go_default_library",
        "//vendor/k8s.io/klog:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/apis/core/v1/helper:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/features:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/config:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/v1alpha1:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/nodeinfo:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/util:go_default_library",
    ],
)
