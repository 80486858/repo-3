apiVersion: v1
kind: Namespace
metadata:
  labels:
    generatedBy: cdk8s
  name: zclcdk-test-1
  namespace: zclcdk-test-1
---
apiVersion: v1
kind: ConfigMap
data:
  apicredentials: |-
    notreal@fakeemail.ch
    twochains
  node-password: T.tLHkcmwePT/p,]sYuntjwHKAsrhm#4eRs4LuKHwvHejWYAC2JP4M8HimwgmbaZ
metadata:
  labels:
    app: chainlink-cm-0
  name: chainlink-cm-0
  namespace: zclcdk-test-1
---
apiVersion: v1
kind: Service
metadata:
  name: chainlink-service-0
  namespace: zclcdk-test-1
spec:
  ports:
    - name: access
      port: 6688
      targetPort: 6688
    - name: p2p
      port: 8899
      targetPort: 8899
  selector:
    app: chainlink-node
    instance: "0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chainlink-0
  namespace: zclcdk-test-1
spec:
  selector:
    matchLabels:
      app: chainlink-node
      instance: "0"
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: chainlink-node
        instance: "0"
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: chainlink
            - name: POSTGRES_PASSWORD
              value: node
            - name: PGPASSWORD
              value: node
            - name: PGUSER
              value: postgres
          image: postgres:11.6
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 60
            periodSeconds: 60
          name: chainlink-db
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 2
            periodSeconds: 2
          resources:
            limits:
              cpu: 450m
              memory: 1024Mi
            requests:
              cpu: 450m
              memory: 1024Mi
        - args:
            - node
            - start
            - -d
            - -p
            - /etc/node-secrets-volume/node-password
            - -a
            - /etc/node-secrets-volume/apicredentials
            - --vrfpassword=/etc/node-secrets-volume/apicredentials
          env:
            - name: ETH_URL
              value: ws://geth:8546
            - name: KEEPER_REGISTRY_SYNC_INTERVAL
              value: 5s
            - name: ETH_DISABLED
              value: "false"
            - name: LOG_LEVEL
              value: debug
            - name: MINIMUM_CONTRACT_PAYMENT_LINK_JUELS
              value: "0"
            - name: EXPLORER_SECRET
              value: ""
            - name: CHAINLINK_PGPASSWORD
              value: node
            - name: JSON_CONSOLE
              value: "false"
            - name: MAX_EXPORT_HTML_THREADS
              value: "2"
            - name: OCR_TRACE_LOGGING
              value: "true"
            - name: P2P_LISTEN_PORT
              value: "6690"
            - name: KEEPER_MINIMUM_REQUIRED_CONFIRMATIONS
              value: "1"
            - name: CHAINLINK_PORT
              value: "6688"
            - name: DATABASE_NAME
              value: chainlink
            - name: CHAINLINK_DEV
              value: "true"
            - name: ENABLE_BULLETPROOF_TX_MANAGER
              value: "true"
            - name: ALLOW_ORIGINS
              value: "*"
            - name: FEATURE_EXTERNAL_INITIATORS
              value: "false"
            - name: CHAINLINK_TLS_PORT
              value: "0"
            - name: FEATURE_OFFCHAIN_REPORTING
              value: "true"
            - name: EXPLORER_URL
              value: ""
            - name: KEEPER_DEFAULT_TRANSACTION_QUEUE_DEPTH
              value: "1"
            - name: ETH_CHAIN_ID
              value: "1337"
            - name: DEFAULT_HTTP_ALLOW_UNRESTRICTED_NETWORK_ACCESS
              value: "true"
            - name: P2P_LISTEN_IP
              value: 0.0.0.0
            - name: ROOT
              value: ./clroot
            - name: ETH_MAX_IN_FLIGHT_TRANSACTIONS
              value: "5000"
            - name: EXPLORER_ACCESS_KEY
              value: ""
            - name: KEEPER_REGISTRY_PERFORM_GAS_OVERHEAD
              value: "1"
            - name: DATABASE_URL
              value: postgresql://postgres:node@0.0.0.0/chainlink?sslmode=disable
            - name: SECURE_COOKIES
              value: "false"
          image: public.ecr.aws/z0b1w9r9/chainlink:develop.d2b337227bc5d4c4b6ee4f605017f205e01e5d16
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 20
            periodSeconds: 5
          name: node
          ports:
            - containerPort: 6688
              name: access
            - containerPort: 8899
              name: p2p
          readinessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 1024Mi
            requests:
              cpu: 200m
              memory: 1024Mi
          volumeMounts:
            - mountPath: /etc/node-secrets-volume
              name: chainlink-config-map
      serviceAccountName: default
      volumes:
        - configMap:
            name: chainlink-cm-0
          name: chainlink-config-map
---
apiVersion: v1
kind: ConfigMap
data:
  apicredentials: |-
    notreal@fakeemail.ch
    twochains
  node-password: T.tLHkcmwePT/p,]sYuntjwHKAsrhm#4eRs4LuKHwvHejWYAC2JP4M8HimwgmbaZ
metadata:
  labels:
    app: chainlink-cm-1
  name: chainlink-cm-1
  namespace: zclcdk-test-1
---
apiVersion: v1
kind: Service
metadata:
  name: chainlink-service-1
  namespace: zclcdk-test-1
spec:
  ports:
    - name: access
      port: 6688
      targetPort: 6688
    - name: p2p
      port: 8899
      targetPort: 8899
  selector:
    app: chainlink-node
    instance: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chainlink-1
  namespace: zclcdk-test-1
spec:
  selector:
    matchLabels:
      app: chainlink-node
      instance: "1"
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: chainlink-node
        instance: "1"
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: chainlink
            - name: POSTGRES_PASSWORD
              value: node
            - name: PGPASSWORD
              value: node
            - name: PGUSER
              value: postgres
          image: postgres:11.6
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 60
            periodSeconds: 60
          name: chainlink-db
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 2
            periodSeconds: 2
          resources:
            limits:
              cpu: 450m
              memory: 1024Mi
            requests:
              cpu: 450m
              memory: 1024Mi
        - args:
            - node
            - start
            - -d
            - -p
            - /etc/node-secrets-volume/node-password
            - -a
            - /etc/node-secrets-volume/apicredentials
            - --vrfpassword=/etc/node-secrets-volume/apicredentials
          env:
            - name: CHAINLINK_PGPASSWORD
              value: node
            - name: CHAINLINK_PORT
              value: "6688"
            - name: FEATURE_OFFCHAIN_REPORTING
              value: "true"
            - name: JSON_CONSOLE
              value: "false"
            - name: P2P_LISTEN_PORT
              value: "6690"
            - name: KEEPER_REGISTRY_SYNC_INTERVAL
              value: 5s
            - name: ETH_URL
              value: ws://geth:8546
            - name: LOG_LEVEL
              value: debug
            - name: KEEPER_DEFAULT_TRANSACTION_QUEUE_DEPTH
              value: "1"
            - name: OCR_TRACE_LOGGING
              value: "true"
            - name: EXPLORER_SECRET
              value: ""
            - name: ETH_CHAIN_ID
              value: "1337"
            - name: CHAINLINK_TLS_PORT
              value: "0"
            - name: ETH_MAX_IN_FLIGHT_TRANSACTIONS
              value: "5000"
            - name: EXPLORER_URL
              value: ""
            - name: DATABASE_NAME
              value: chainlink
            - name: ETH_DISABLED
              value: "false"
            - name: MINIMUM_CONTRACT_PAYMENT_LINK_JUELS
              value: "0"
            - name: DEFAULT_HTTP_ALLOW_UNRESTRICTED_NETWORK_ACCESS
              value: "true"
            - name: ENABLE_BULLETPROOF_TX_MANAGER
              value: "true"
            - name: MAX_EXPORT_HTML_THREADS
              value: "2"
            - name: ROOT
              value: ./clroot
            - name: KEEPER_REGISTRY_PERFORM_GAS_OVERHEAD
              value: "1"
            - name: DATABASE_URL
              value: postgresql://postgres:node@0.0.0.0/chainlink?sslmode=disable
            - name: ALLOW_ORIGINS
              value: "*"
            - name: FEATURE_EXTERNAL_INITIATORS
              value: "false"
            - name: CHAINLINK_DEV
              value: "true"
            - name: P2P_LISTEN_IP
              value: 0.0.0.0
            - name: SECURE_COOKIES
              value: "false"
            - name: EXPLORER_ACCESS_KEY
              value: ""
            - name: KEEPER_MINIMUM_REQUIRED_CONFIRMATIONS
              value: "1"
          image: public.ecr.aws/z0b1w9r9/chainlink:develop.d2b337227bc5d4c4b6ee4f605017f205e01e5d16
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 20
            periodSeconds: 5
          name: node
          ports:
            - containerPort: 6688
              name: access
            - containerPort: 8899
              name: p2p
          readinessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 1024Mi
            requests:
              cpu: 200m
              memory: 1024Mi
          volumeMounts:
            - mountPath: /etc/node-secrets-volume
              name: chainlink-config-map
      serviceAccountName: default
      volumes:
        - configMap:
            name: chainlink-cm-1
          name: chainlink-config-map
---
apiVersion: v1
kind: ConfigMap
data:
  apicredentials: |-
    notreal@fakeemail.ch
    twochains
  node-password: T.tLHkcmwePT/p,]sYuntjwHKAsrhm#4eRs4LuKHwvHejWYAC2JP4M8HimwgmbaZ
metadata:
  labels:
    app: chainlink-cm-2
  name: chainlink-cm-2
  namespace: zclcdk-test-1
---
apiVersion: v1
kind: Service
metadata:
  name: chainlink-service-2
  namespace: zclcdk-test-1
spec:
  ports:
    - name: access
      port: 6688
      targetPort: 6688
    - name: p2p
      port: 8899
      targetPort: 8899
  selector:
    app: chainlink-node
    instance: "2"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chainlink-2
  namespace: zclcdk-test-1
spec:
  selector:
    matchLabels:
      app: chainlink-node
      instance: "2"
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: chainlink-node
        instance: "2"
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: chainlink
            - name: POSTGRES_PASSWORD
              value: node
            - name: PGPASSWORD
              value: node
            - name: PGUSER
              value: postgres
          image: postgres:11.6
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 60
            periodSeconds: 60
          name: chainlink-db
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 2
            periodSeconds: 2
          resources:
            limits:
              cpu: 450m
              memory: 1024Mi
            requests:
              cpu: 450m
              memory: 1024Mi
        - args:
            - node
            - start
            - -d
            - -p
            - /etc/node-secrets-volume/node-password
            - -a
            - /etc/node-secrets-volume/apicredentials
            - --vrfpassword=/etc/node-secrets-volume/apicredentials
          env:
            - name: ETH_MAX_IN_FLIGHT_TRANSACTIONS
              value: "5000"
            - name: CHAINLINK_PGPASSWORD
              value: node
            - name: ROOT
              value: ./clroot
            - name: EXPLORER_URL
              value: ""
            - name: MAX_EXPORT_HTML_THREADS
              value: "2"
            - name: DATABASE_URL
              value: postgresql://postgres:node@0.0.0.0/chainlink?sslmode=disable
            - name: CHAINLINK_DEV
              value: "true"
            - name: FEATURE_OFFCHAIN_REPORTING
              value: "true"
            - name: JSON_CONSOLE
              value: "false"
            - name: EXPLORER_ACCESS_KEY
              value: ""
            - name: DATABASE_NAME
              value: chainlink
            - name: FEATURE_EXTERNAL_INITIATORS
              value: "false"
            - name: ENABLE_BULLETPROOF_TX_MANAGER
              value: "true"
            - name: ETH_DISABLED
              value: "false"
            - name: CHAINLINK_PORT
              value: "6688"
            - name: P2P_LISTEN_PORT
              value: "6690"
            - name: CHAINLINK_TLS_PORT
              value: "0"
            - name: LOG_LEVEL
              value: debug
            - name: P2P_LISTEN_IP
              value: 0.0.0.0
            - name: EXPLORER_SECRET
              value: ""
            - name: KEEPER_REGISTRY_SYNC_INTERVAL
              value: 5s
            - name: ETH_URL
              value: ws://geth:8546
            - name: ETH_CHAIN_ID
              value: "1337"
            - name: ALLOW_ORIGINS
              value: "*"
            - name: KEEPER_MINIMUM_REQUIRED_CONFIRMATIONS
              value: "1"
            - name: KEEPER_REGISTRY_PERFORM_GAS_OVERHEAD
              value: "1"
            - name: MINIMUM_CONTRACT_PAYMENT_LINK_JUELS
              value: "0"
            - name: OCR_TRACE_LOGGING
              value: "true"
            - name: SECURE_COOKIES
              value: "false"
            - name: DEFAULT_HTTP_ALLOW_UNRESTRICTED_NETWORK_ACCESS
              value: "true"
            - name: KEEPER_DEFAULT_TRANSACTION_QUEUE_DEPTH
              value: "1"
          image: public.ecr.aws/z0b1w9r9/chainlink:develop.d2b337227bc5d4c4b6ee4f605017f205e01e5d16
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 20
            periodSeconds: 5
          name: node
          ports:
            - containerPort: 6688
              name: access
            - containerPort: 8899
              name: p2p
          readinessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 1024Mi
            requests:
              cpu: 200m
              memory: 1024Mi
          volumeMounts:
            - mountPath: /etc/node-secrets-volume
              name: chainlink-config-map
      serviceAccountName: default
      volumes:
        - configMap:
            name: chainlink-cm-2
          name: chainlink-config-map
---
apiVersion: v1
kind: ConfigMap
data:
  apicredentials: |-
    notreal@fakeemail.ch
    twochains
  node-password: T.tLHkcmwePT/p,]sYuntjwHKAsrhm#4eRs4LuKHwvHejWYAC2JP4M8HimwgmbaZ
metadata:
  labels:
    app: chainlink-cm-3
  name: chainlink-cm-3
  namespace: zclcdk-test-1
---
apiVersion: v1
kind: Service
metadata:
  name: chainlink-service-3
  namespace: zclcdk-test-1
spec:
  ports:
    - name: access
      port: 6688
      targetPort: 6688
    - name: p2p
      port: 8899
      targetPort: 8899
  selector:
    app: chainlink-node
    instance: "3"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chainlink-3
  namespace: zclcdk-test-1
spec:
  selector:
    matchLabels:
      app: chainlink-node
      instance: "3"
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: chainlink-node
        instance: "3"
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: chainlink
            - name: POSTGRES_PASSWORD
              value: node
            - name: PGPASSWORD
              value: node
            - name: PGUSER
              value: postgres
          image: postgres:11.6
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 60
            periodSeconds: 60
          name: chainlink-db
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 2
            periodSeconds: 2
          resources:
            limits:
              cpu: 450m
              memory: 1024Mi
            requests:
              cpu: 450m
              memory: 1024Mi
        - args:
            - node
            - start
            - -d
            - -p
            - /etc/node-secrets-volume/node-password
            - -a
            - /etc/node-secrets-volume/apicredentials
            - --vrfpassword=/etc/node-secrets-volume/apicredentials
          env:
            - name: MAX_EXPORT_HTML_THREADS
              value: "2"
            - name: SECURE_COOKIES
              value: "false"
            - name: ALLOW_ORIGINS
              value: "*"
            - name: CHAINLINK_DEV
              value: "true"
            - name: FEATURE_EXTERNAL_INITIATORS
              value: "false"
            - name: LOG_LEVEL
              value: debug
            - name: ETH_URL
              value: ws://geth:8546
            - name: P2P_LISTEN_PORT
              value: "6690"
            - name: EXPLORER_URL
              value: ""
            - name: KEEPER_REGISTRY_SYNC_INTERVAL
              value: 5s
            - name: CHAINLINK_PORT
              value: "6688"
            - name: JSON_CONSOLE
              value: "false"
            - name: ETH_MAX_IN_FLIGHT_TRANSACTIONS
              value: "5000"
            - name: KEEPER_DEFAULT_TRANSACTION_QUEUE_DEPTH
              value: "1"
            - name: DATABASE_URL
              value: postgresql://postgres:node@0.0.0.0/chainlink?sslmode=disable
            - name: FEATURE_OFFCHAIN_REPORTING
              value: "true"
            - name: MINIMUM_CONTRACT_PAYMENT_LINK_JUELS
              value: "0"
            - name: KEEPER_REGISTRY_PERFORM_GAS_OVERHEAD
              value: "1"
            - name: DATABASE_NAME
              value: chainlink
            - name: CHAINLINK_TLS_PORT
              value: "0"
            - name: DEFAULT_HTTP_ALLOW_UNRESTRICTED_NETWORK_ACCESS
              value: "true"
            - name: ENABLE_BULLETPROOF_TX_MANAGER
              value: "true"
            - name: ETH_CHAIN_ID
              value: "1337"
            - name: ETH_DISABLED
              value: "false"
            - name: CHAINLINK_PGPASSWORD
              value: node
            - name: OCR_TRACE_LOGGING
              value: "true"
            - name: EXPLORER_ACCESS_KEY
              value: ""
            - name: P2P_LISTEN_IP
              value: 0.0.0.0
            - name: ROOT
              value: ./clroot
            - name: EXPLORER_SECRET
              value: ""
            - name: KEEPER_MINIMUM_REQUIRED_CONFIRMATIONS
              value: "1"
          image: public.ecr.aws/z0b1w9r9/chainlink:develop.d2b337227bc5d4c4b6ee4f605017f205e01e5d16
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 20
            periodSeconds: 5
          name: node
          ports:
            - containerPort: 6688
              name: access
            - containerPort: 8899
              name: p2p
          readinessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 1024Mi
            requests:
              cpu: 200m
              memory: 1024Mi
          volumeMounts:
            - mountPath: /etc/node-secrets-volume
              name: chainlink-config-map
      serviceAccountName: default
      volumes:
        - configMap:
            name: chainlink-cm-3
          name: chainlink-config-map
---
apiVersion: v1
kind: ConfigMap
data:
  apicredentials: |-
    notreal@fakeemail.ch
    twochains
  node-password: T.tLHkcmwePT/p,]sYuntjwHKAsrhm#4eRs4LuKHwvHejWYAC2JP4M8HimwgmbaZ
metadata:
  labels:
    app: chainlink-cm-4
  name: chainlink-cm-4
  namespace: zclcdk-test-1
---
apiVersion: v1
kind: Service
metadata:
  name: chainlink-service-4
  namespace: zclcdk-test-1
spec:
  ports:
    - name: access
      port: 6688
      targetPort: 6688
    - name: p2p
      port: 8899
      targetPort: 8899
  selector:
    app: chainlink-node
    instance: "4"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chainlink-4
  namespace: zclcdk-test-1
spec:
  selector:
    matchLabels:
      app: chainlink-node
      instance: "4"
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: chainlink-node
        instance: "4"
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: chainlink
            - name: POSTGRES_PASSWORD
              value: node
            - name: PGPASSWORD
              value: node
            - name: PGUSER
              value: postgres
          image: postgres:11.6
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 60
            periodSeconds: 60
          name: chainlink-db
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 2
            periodSeconds: 2
          resources:
            limits:
              cpu: 450m
              memory: 1024Mi
            requests:
              cpu: 450m
              memory: 1024Mi
        - args:
            - node
            - start
            - -d
            - -p
            - /etc/node-secrets-volume/node-password
            - -a
            - /etc/node-secrets-volume/apicredentials
            - --vrfpassword=/etc/node-secrets-volume/apicredentials
          env:
            - name: P2P_LISTEN_PORT
              value: "6690"
            - name: KEEPER_DEFAULT_TRANSACTION_QUEUE_DEPTH
              value: "1"
            - name: CHAINLINK_PGPASSWORD
              value: node
            - name: FEATURE_OFFCHAIN_REPORTING
              value: "true"
            - name: OCR_TRACE_LOGGING
              value: "true"
            - name: ETH_MAX_IN_FLIGHT_TRANSACTIONS
              value: "5000"
            - name: EXPLORER_ACCESS_KEY
              value: ""
            - name: ALLOW_ORIGINS
              value: "*"
            - name: MINIMUM_CONTRACT_PAYMENT_LINK_JUELS
              value: "0"
            - name: KEEPER_MINIMUM_REQUIRED_CONFIRMATIONS
              value: "1"
            - name: ETH_DISABLED
              value: "false"
            - name: ENABLE_BULLETPROOF_TX_MANAGER
              value: "true"
            - name: JSON_CONSOLE
              value: "false"
            - name: MAX_EXPORT_HTML_THREADS
              value: "2"
            - name: P2P_LISTEN_IP
              value: 0.0.0.0
            - name: DATABASE_URL
              value: postgresql://postgres:node@0.0.0.0/chainlink?sslmode=disable
            - name: DATABASE_NAME
              value: chainlink
            - name: FEATURE_EXTERNAL_INITIATORS
              value: "false"
            - name: CHAINLINK_TLS_PORT
              value: "0"
            - name: ETH_URL
              value: ws://geth:8546
            - name: ETH_CHAIN_ID
              value: "1337"
            - name: CHAINLINK_DEV
              value: "true"
            - name: CHAINLINK_PORT
              value: "6688"
            - name: DEFAULT_HTTP_ALLOW_UNRESTRICTED_NETWORK_ACCESS
              value: "true"
            - name: ROOT
              value: ./clroot
            - name: EXPLORER_URL
              value: ""
            - name: EXPLORER_SECRET
              value: ""
            - name: LOG_LEVEL
              value: debug
            - name: SECURE_COOKIES
              value: "false"
            - name: KEEPER_REGISTRY_SYNC_INTERVAL
              value: 5s
            - name: KEEPER_REGISTRY_PERFORM_GAS_OVERHEAD
              value: "1"
          image: public.ecr.aws/z0b1w9r9/chainlink:develop.d2b337227bc5d4c4b6ee4f605017f205e01e5d16
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 20
            periodSeconds: 5
          name: node
          ports:
            - containerPort: 6688
              name: access
            - containerPort: 8899
              name: p2p
          readinessProbe:
            httpGet:
              path: /
              port: 6688
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 1024Mi
            requests:
              cpu: 200m
              memory: 1024Mi
          volumeMounts:
            - mountPath: /etc/node-secrets-volume
              name: chainlink-config-map
      serviceAccountName: default
      volumes:
        - configMap:
            name: chainlink-cm-4
          name: chainlink-config-map
---
apiVersion: v1
kind: Service
metadata:
  name: geth
  namespace: zclcdk-test-1
spec:
  ports:
    - name: ws-rpc
      port: 8546
      targetPort: 8546
    - name: http-rpc
      port: 8544
      targetPort: 8544
  selector:
    app: geth
---
apiVersion: v1
kind: ConfigMap
data:
  genesis.json: |-
    {
          "config": {
            "chainId": 1337,
            "homesteadBlock": 0,
            "eip150Block": 0,
            "eip155Block": 0,
            "eip158Block": 0,
            "eip160Block": 0,
            "byzantiumBlock": 0,
            "constantinopleBlock": 0,
            "petersburgBlock": 0,
            "istanbulBlock": 0,
            "muirGlacierBlock": 0,
            "berlinBlock": 0,
            "londonBlock": 0
          },
          "nonce": "0x0000000000000042",
          "mixhash": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "difficulty": "1",
          "coinbase": "0x3333333333333333333333333333333333333333",
          "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extraData": "0x",
          "gasLimit": "8000000000",
          "alloc": {
            "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266": {
              "balance": "20000000000000000000000"
            },
            "0x70997970C51812dc3A010C7d01b50e0d17dc79C8": {
              "balance": "20000000000000000000000"
            },
            "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC": {
              "balance": "20000000000000000000000"
            }
          }
        }
  init.sh: |-
    #!/bin/bash
    if [ ! -d /root/.ethereum/keystore ]; then
    	echo "/root/.ethereum/keystore not found, running 'geth init'..."
    	geth init /root/ethconfig/genesis.json
    	echo "...done!"
    fi

    geth "$@"
  key1: '{"address":"f39fd6e51aad88f6f4ce6ab8827279cfffb92266","crypto":{"cipher":"aes-128-ctr","ciphertext":"c36afd6e60b82d6844530bd6ab44dbc3b85a53e826c3a7f6fc6a75ce38c1e4c6","cipherparams":{"iv":"f69d2bb8cd0cb6274535656553b61806"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"80d5f5e38ba175b6b89acfc8ea62a6f163970504af301292377ff7baafedab53"},"mac":"f2ecec2c4d05aacc10eba5235354c2fcc3776824f81ec6de98022f704efbf065"},"id":"e5c124e9-e280-4b10-a27b-d7f3e516b408","version":3}'
  key2: '{"address":"70997970c51812dc3a010c7d01b50e0d17dc79c8","crypto":{"cipher":"aes-128-ctr","ciphertext":"f8183fa00bc112645d3e23e29a233e214f7c708bf49d72750c08af88ad76c980","cipherparams":{"iv":"796d08e3e1f71bde89ed826abda96cda"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"03c864a22a1f7b06b1da12d8b93e024ac144f898285907c58b2abc135fc8a35c"},"mac":"5fe91b1a1821c0d9f85dfd582354ead9612e9a7e9adc38b06a2beff558c119ac"},"id":"d2cab765-5e30-42ae-bb91-f090d9574fae","version":3}'
  key3: '{"address":"3c44cdddb6a900fa2b585dd299e03d12fa4293bc","crypto":{"cipher":"aes-128-ctr","ciphertext":"2cd6ab87086c47f343f2c4d957eace7986f3b3c87fc35a2aafbefb57a06d9f1c","cipherparams":{"iv":"4e16b6cd580866c1aa642fb4d7312c9b"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"0cabde93877f6e9a59070f9992f7a01848618263124835c90d4d07a0041fc57c"},"mac":"94b7776ea95b0ecd8406c7755acf17b389b7ebe489a8942e32082dfdc1f04f57"},"id":"ade1484b-a3bb-426f-9223-a1f5e3bde2e8","version":3}'
  password.txt: ""
metadata:
  labels:
    app: geth-cm
  name: geth-cm
  namespace: zclcdk-test-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: geth
  namespace: zclcdk-test-1
spec:
  selector:
    matchLabels:
      app: geth
  template:
    metadata:
      labels:
        app: geth
    spec:
      containers:
        - args:
            - --dev
            - --password=/root/config/password.txt
            - --datadir=/root/.ethereum/devchain
            - --unlock=0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266
            - --unlock=0x70997970C51812dc3A010C7d01b50e0d17dc79C8
            - --unlock=0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC
            - --mine
            - --miner.etherbase=0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266
            - --ipcdisable
            - --http
            - --http.addr=0.0.0.0
            - --http.port=8544
            - --http.vhosts=*
            - --ws
            - --ws.origins=*
            - --ws.addr=0.0.0.0
            - --ws.port=8546
            - --graphql
            - --graphql.corsdomain=*
            - --allow-insecure-unlock
            - --rpc.allow-unprotected-txs
            - --http.corsdomain=*
            - --vmdebug
            - --networkid=1337
            - --rpc.txfeecap=0
            - --dev.period=1
            - --miner.gasprice=10000000000
            - --miner.gastarget=80000000000
          command:
            - sh
            - ./root/init.sh
          env: []
          image: ethereum/client-go:v1.10.17
          imagePullPolicy: Always
          name: geth
          ports:
            - containerPort: 8544
              name: http-rpc
            - containerPort: 8546
              name: ws-rpc
          resources:
            limits:
              cpu: 200m
              memory: 528Mi
            requests:
              cpu: 200m
              memory: 528Mi
          volumeMounts:
            - mountPath: /root/init.sh
              name: geth-cm
              subPath: init.sh
            - mountPath: /root/config
              name: geth-cm
            - mountPath: /root/.ethereum/devchain/keystore/key1
              name: geth-cm
              subPath: key1
            - mountPath: /root/.ethereum/devchain/keystore/key2
              name: geth-cm
              subPath: key2
            - mountPath: /root/.ethereum/devchain/keystore/key3
              name: geth-cm
              subPath: key3
      serviceAccountName: default
      volumes:
        - configMap:
            name: geth-cm
          name: geth-cm
---
apiVersion: v1
kind: ConfigMap
data:
  mockserver.properties: |-
    ###############################
    # MockServer & Proxy Settings #
    ###############################

    # Socket & Port Settings

    # socket timeout in milliseconds (default 120000)
    mockserver.maxSocketTimeout=120000

    # Json Initialization

    mockserver.initializationJsonPath=/config/initializerJson.json
    mockserver.watchInitializationJson=true

    mockserver.livenessHttpGetPath=/liveness/probe
metadata:
  labels:
    app: mockserver-cm
  name: mockserver-cm
  namespace: zclcdk-test-1
---
apiVersion: v1
kind: Service
metadata:
  name: mockserver
  namespace: zclcdk-test-1
spec:
  ports:
    - name: serviceport
      port: 1080
      targetPort: 1080
  selector:
    app: mockserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mockserver
  namespace: zclcdk-test-1
spec:
  selector:
    matchLabels:
      app: mockserver
  template:
    metadata:
      labels:
        app: mockserver
    spec:
      containers:
        - env:
            - name: MOCKSERVER_LOG_LEVEL
              value: DEBUG
            - name: SERVER_PORT
              value: "1080"
          image: mockserver/mockserver:mockserver-5.13.2
          imagePullPolicy: Always
          name: mockserver
          ports:
            - containerPort: 1080
              name: serviceport
          resources:
            limits:
              cpu: 200m
              memory: 528Mi
            requests:
              cpu: 200m
              memory: 528Mi
          volumeMounts:
            - mountPath: /config
              name: mockserver-cm
            - mountPath: /libs
              name: mockserver-cm
      serviceAccountName: default
      volumes:
        - configMap:
            name: mockserver-cm
          name: mockserver-cm
